openapi: 3.0.0
info:
  description: SBE Prototyping Backend
  version: 1.0.0
  title: Human-in-the-Loop AB-BPM
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
paths:
  /batch-policy:
    post:
      summary: Set a new batch policy
      description: This endpoint will assign a new batch policy to the currently active process in the process db table.
      tags:
        - Batch Policy
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                experimentationLength:
                  type: integer
                experimentationDecay:
                  type: integer
                executionStrategy:
                  type: array
                  items:
                    type: object
                    properties:
                      customerCategory:
                        type: string
                      explorationProbabilityA:
                        type: number
                      explorationProbabilityB:
                        type: number
      responses:
        '200':
          description: Success
    delete:
      summary: Delete all batch policies.
      tags:
        - Batch Policy
      responses:
        '200':
          description: Success
  /batch-policy/latest:
    get:
      summary: Get the latest batch policy proposal
      description: >
        Get the latest (so the currently active) batch policy proposal of the currently active process
      tags:
        - Batch Policy
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  lastModified:
                    type: string
                  experimentationLength:
                    type: integer
                  experimentationDecay:
                    type: integer
                  processDefinitionIdA:
                    type: string
                  processDefinitionIdB:
                    type: string
                  executionStrategy:
                    type: array
                    items:
                      type: object
                      properties:
                        customerCategory:
                          type: string
                        explorationProbabilityA:
                          type: number
                        explorationProbabilityB:
                          type: number
  /batch-policy/count:
    get:
      summary: Get the amount of Batch Policies in the db.
      tags:
        - Batch Policy
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  batchPolicyCount:
                    type: integer
  /process/{process_name}:
    post:
      summary: Add a new process with two variants.
      description: >
        They are deployed to camunda automagically.
      tags:
        - Process
      parameters:
        - name: process_name
          in: path
          description: Process Name
          required: true
          schema:
            type: string
        - name: default-version
          in: query
          description: Either 'a' or 'b', used to determine which version to use in between batches.
          schema:
            type: string
        - name: customer-categories
          in: query
          description: Which customer categories exist for that process (the different contexts of the contextual bandit). Format with dash separator ('-', e.g. 'public-gov')
          schema:
            type: string
        - name: a_hist_min_duration
          in: query
          description: Mimunum instance duration in process history of old version (a), used to evaluate new instances. In seconds.
          schema:
            type: number
        - name: a_hist_max_duration
          in: query
          description: Maximum instance duration in process history of old version (a), used to evaluate new instances. In seconds.
          schema:
            type: number
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                variantA:
                  type: string
                  format: binary
                variantB:
                  type: string
                  format: binary
      responses:
        200:
          description: Success
        400:
          # TODO improve these with more details and the options?
          description: Client error
        500:
          description: Server error
  /process:
    delete:
      summary: Delete all processes from db and files from filesystem of backend.
      tags:
        - Process
      responses:
        200:
          description: Success
        500:
          description: Server error
  /process/count:
    get:
      summary: Get amount of processes deployed via our backend.
      tags:
        - Process
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  processesCount:
                    type: integer
  /process/active-meta:
    get:
      summary: Get metadata about currently active process.
      tags:
        - Process
      description: >
        id is the id in our backend, not in the camunda engine.
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  added:
                    type: string
  /process/variant-file/{a_or_b}:
    get:
      summary: Get the bpmn file of a certain process.
      description: >
        You can get the relevant currently active process id via
        this api call: /process/active-meta
      tags:
        - Process
      parameters:
        - name: a_or_b
          in: path
          description: Enter a or b, to get the specified version of the process
          required: true
          schema:
            type: string
        - name: id
          in: query
          description: Specify which process you mean by the process id of our backend.
          required: true
          schema:
            type: integer
      responses:
        200:
          # TODO improve this so file can be downloaded from swagger UI
          description: OK, bpmn file is downloaded
        400:
          description: Client error
        404:
          description: No process with that id
        500:
          description: Server error
  /instance-router/start-instance:
    get:
      summary: Start a new instance of a certain process.
      tags:
        - Instance Router
      parameters:
        - name: process-id
          in: query
          description: Specify which process you mean by the process id of our backend.
          required: true
          schema:
            type: integer
        - name: customer-category
          in: query
          description: Specify which customer category the instantiation request belongs to
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
        500:
          description: server error
  /instance-router/aggregate-data:
    get:
      summary: Get aggregate data of past instances of a certain process
      tags:
        - Instance Router
      parameters:
        - name: process-id
          in: query
          description: Specify which process you mean by the process id of our backend.
          required: true
          schema:
            type: integer
      responses:
        200:
          description: OK
        500:
          description: server error
  /instance-router/aggregate-data/client-requests:
    get:
      summary: Get a time overview of client requests and where they have been routed to
      tags:
        - Instance Router
      parameters:
        - name: process-id
          in: query
          description: Specify which process you mean by the process id of our backend.
          required: true
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  noTotalRequests:
                    type: integer
                    example: 3
                    description: Total number of requests that have been made to backend for this process.
                  requestsA:
                    type: array
                    items:
                      type: integer
                    example: [ 1, 1, 2 ]
                    description:
                      Array of how many requests have been routed to A. Index of array is number of total requests at
                      that point and value at index is how many instances have been routed to A at that point.
                  requestsB:
                    type: array
                    items:
                      type: integer
                    example: [ 0, 1, 1 ]
                    description:
                      Array of how many requests have been routed to B. Index of array is number of total requests at
                      that point and value at index is how many instances have been routed to B at that point.

        500:
          description: server error
        400:
          description: client error
  /instance-router/manual-decision:
    post:
      summary: Allows human expert to manually make a decision (whether to use version A or B from now on)
      tags:
        - Instance Router
      parameters:
        - name: process-id
          in: query
          description: Specify which process you mean by the process id of our backend.
          required: true
          schema:
            type: integer
        - name: customer-category
          in: query
          description: Specify which customer category the instantiation request belongs to
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
        500:
          description: server error
        400:
          description: client error
  /instance-router/finished-instance-count:
    post:
      summary: Get count of instances that have been registered as finished in our system
      tags:
        - Instance Router
      parameters:
        - name: process-id
          in: query
          description: Specify which process you mean by the process id of our backend.
          required: true
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  finishedInstanceCount:
                    type: integer
                    example: 23
        500:
          description: server error
        400:
          description: client error











